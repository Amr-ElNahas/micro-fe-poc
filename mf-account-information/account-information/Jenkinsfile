pipeline {
    parameters {
      string(name: 'HOST', description: 'Ingress host', defaultValue: 'poc.inma.com')
      choice(name: 'ENV', choices: ['test', 'dev', 'prod'], description: 'Angular environment')
      choice(name: 'NAMESPACE', choices: ['axa-motors'], description: 'K8s Namespace')
      choice(name: 'DOCKER_REGISTRY', choices: ['registry.sumerge.local'], description: 'Docker registry')
    }
    environment {
      registry = "${DOCKER_REGISTRY}/${NAMESPACE}/"
	  dockerImage = ''
    }

    agent {
            kubernetes {
                cloud 'kubernetes'
                inheritFrom 'k8s-jnlp-npm14'
            }
        }

    stages {

	  stage('Docker'){
        stages {
		  stage('Create Image') {
            steps {
              dir('mf-account-information/account-information') {
              script {
sh 'sed -i "s|@DOCKER_REGISTRY@|${DOCKER_REGISTRY}|g" Dockerfile'
                dockerImage = docker.build registry + "account-info:$BUILD_NUMBER"
              }
            }
            }
          }

          stage('Push Image') {
            steps {
              dir('mf-account-information/account-information') {
              script {
                docker.withRegistry( '' ) {
                dockerImage.push()
			  }
            }
              }
          }
        }
	  }
	}

	stage ('K8s deploy') {
      steps{
        dir('mf-account-information/account-information') {
        sh """
        sed -i "s|@BUILD_NUMBER@|${BUILD_NUMBER}|g" $WORKSPACE/mf-account-information/account-information/kubernetes.yml
        sed -i "s|@HOST@|${HOST}|g" $WORKSPACE/mf-account-information/account-information/kubernetes.yml
        sed -i "s|@DOCKER_REGISTRY@|${DOCKER_REGISTRY}|g" $WORKSPACE/mf-account-information/account-information/kubernetes.yml
        sed -i "s|@NAMESPACE@|${NAMESPACE}|g" $WORKSPACE/mf-account-information/account-information/kubernetes.yml
        kubectl apply -f $WORKSPACE/mf-account-information/account-information/kubernetes.yml -n ${NAMESPACE}
        """
        }
      }
    }
  }
}
